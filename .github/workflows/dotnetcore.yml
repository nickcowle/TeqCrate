name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        dotnet:
          - { sdk: 3.1.x, framework: netcoreapp3.1 }
          - { sdk: 6.0.x, framework: net6.0 }
          - { sdk: 7.0.x, framework: net7.0 }
        include:
          - os: windows-latest
            dotnet: { sdk: 7.0.x, framework: net481 }

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # so that NerdBank.GitVersioning has access to history
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{matrix.dotnet.sdk}}
    - name: Restore dependencies
      run: dotnet restore
      env:
        NUGET_CERT_REVOCATION_MODE: offline
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal --framework ${{matrix.dotnet.framework}}

  check-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET SDK v6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Prepare .NET tools
        run: dotnet tool restore
      - name: Run Fantomas
        run: ./hooks/pre-push

  nuget-pack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # so that NerdBank.GitVersioning has access to history
      - name: Setup .NET SDK v6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: dotnet build TeqCrate/TeqCrate.fsproj --configuration Release
      - name: Pack
        run: dotnet pack TeqCrate/TeqCrate.fsproj --configuration Release
      - name: Upload NuGet artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: TeqCrate/bin/Release/TeqCrate.*.nupkg

  expected-pack:
    needs: [nuget-pack]
    runs-on: ubuntu-latest
    steps:
      - name: Download NuGet artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget-package
      - name: Check NuGet contents
        # Verify that there is exactly one TeqCrate.*.nupkg in the artifact that would be NuGet published
        run: if [[ $(find . -maxdepth 1 -name 'TeqCrate.*.nupkg' -printf c | wc -c) -ne "1" ]]; then exit 1; fi

  all-required-checks-complete:
    needs: [check-format, build, expected-pack]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All required checks complete."
        #
  # This check does not gate release, because external dependencies may be flaky.
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: gaurav-nelson/github-action-markdown-link-check@v1

